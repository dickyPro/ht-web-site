{
  "filename": "README.md",
  "__html": "<h1>fast-cache-starter</h1>\n<p>一款轻量级开源缓存系统，支持多种L1,L2级缓存自由组合、切换，L1缓存使用内存（可选择guava、Caffeine），L2缓存使用 Redis(推荐)/Memcached等，可以由用户自由拓展。<br>\n<br>\n基于spring boot上的注解缓存，自带轻量级缓存管理页面，采用gson序列化与反序列化，以json串存于缓存之中，支持单个缓存设置过期时间，可以根据前缀移除缓存。fast-cache-starter可以快速用于日常的spring boot/spring mvc应用之中。<br></p>\n<h1>应用场景</h1>\n<ul>\n<li>1.系统原先无缓存情况下，使用cache可快速提升性能，避免应用重启导致的缓存冷启动后对后端业务的冲击。</li>\n<li>2.与redis /Memcached 等外置缓存解耦，L1的存在可降低对L2的读取次数，即使断开L2外置缓存，系统仍可正常运行并且保持一定缓存效率；</li>\n</ul>\n<h1>缓存结构</h1>\n<p>Cache 的两级缓存结构<br></p>\n<ul>\n<li>L1： 进程内缓存</li>\n<li>L2： Redis/Memcached 外置缓存</li>\n<li>读取顺序：L1-&gt;L2-&gt;database</li>\n</ul>\n<h1>使用手册</h1>\n<h3>Maven依赖</h3>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.github.franky&lt;/groupId&gt;\n    &lt;artifactId&gt;fast-cache-starter&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h3>缓存配置</h3>\n<p>例如配置redis，在application.yml文件中配置：</p>\n<pre><code>#redis-cache 相关\nredis:\n    pool:\n         maxActive: 300\n         maxIdle: 100\n         maxWait: 1000\n    host: 127.0.0.1\n    port: 6379\n    password:\n    timeout: 2000\n    # 服务或应用名\n    sysName: ace\n    enable: true\n    database: 0\n</code></pre>\n<h3>缓存开启</h3>\n<p>@EnableFastCache</p>\n<h3>使用缓存</h3>\n<p>在方法上进行@Cacheable注解或@CacheClear注解</p>\n<pre><code>\t/**\n\t * 缓存注解\n\t *\n\t * KEY写法：\n\t * 不适配参数：@WechatCacheable(key = &quot;{WechatPlatform}.ht:getEhrUsers&quot;)\n\t * 适配参数：@WechatCacheable(key = &quot;'{WechatPlatform}.ht:getEhrUsers'+#USERID&quot;)\n\t */\n</code></pre>\n<h3>轻量管理端</h3>\n<p>访问地址：<a href=\"http://localhost:8080/cache\">http://localhost:8080/cache</a> ;<br>\n管理端批量或前缀清除fast-cache-starter注册的缓存，同时也可以快速预览缓存的数据内容，也可以对缓存的失效时间进行延长。 <br></p>\n<h1>兼容spring mvc模式</h1>\n<h3>配置文件</h3>\n<ul>\n<li>application.properties</li>\n</ul>\n<pre><code>redis.pool.maxActive = 300\nredis.pool.maxIdle = 100\nredis.pool.maxWait = 1000\nredis.host = 127.0.0.1\nredis.port = 6379\nredis.password = \nredis.timeout = 2000\nredis.database = 0\nredis.sysName = ace\nredis.enable = true\n</code></pre>\n<ul>\n<li>applicationContext.xml</li>\n</ul>\n<pre><code>&lt;!-- beans 头部--&gt;\nxmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;\nxmlns:context=&quot;http://www.springframework.org/schema/context&quot;\nxsi:schemaLocation=&quot;\n\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd\n\thttp://www.springframework.org/schema/context  \n\thttp://www.springframework.org/schema/context/spring-context-3.0.xsd&quot;\t\n&lt;!-- 开启AOP配置 --&gt;\t\n&lt;aop:aspectj-autoproxy&gt;&lt;/aop:aspectj-autoproxy&gt;\n&lt;context:component-scan base-package=&quot;com.ht.cache&quot;/&gt;\n&lt;context:annotation-config/&gt; \n</code></pre>\n<h3>maven依赖</h3>\n<pre><code>&lt;properties&gt;\n    &lt;!-- spring --&gt;\n    &lt;spring.version&gt;4.1.3.RELEASE&lt;/spring.version&gt;\n&lt;properties&gt;\n&lt;dependencies&gt;\n    &lt;dependency&gt;\n    \t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    \t&lt;artifactId&gt;spring-core&lt;/artifactId&gt;\n    \t&lt;version&gt;${spring.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n    \t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    \t&lt;artifactId&gt;spring-beans&lt;/artifactId&gt;\n    \t&lt;version&gt;${spring.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n    \t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    \t&lt;artifactId&gt;spring-context&lt;/artifactId&gt;\n    \t&lt;version&gt;${spring.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n    \t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    \t&lt;artifactId&gt;spring-context-support&lt;/artifactId&gt;\n    \t&lt;version&gt;${spring.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n    \t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    \t&lt;artifactId&gt;spring-aspects&lt;/artifactId&gt;\n    \t&lt;version&gt;${spring.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n    \t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    \t&lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\n    \t&lt;version&gt;${spring.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n    \t&lt;groupId&gt;org.aspectj&lt;/groupId&gt;\n    \t&lt;artifactId&gt;aspectjrt&lt;/artifactId&gt;\n    \t&lt;version&gt;${aspectj.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre>\n<h3>使用方式</h3>\n<p>使用方式与spring boot的方式一样，在方法上直接注解即可。</p>\n<h1>项目相关</h1>\n<ul>\n<li>贡献者 Franky<br></li>\n<li>未完成部分：\n++ 缓存更新cachePut实现；\n++ 集成 memcache；\n++ 审批管理端功能；</li>\n</ul>\n",
  "link": "\\zh-cn\\docs\\README.html",
  "meta": {}
}